services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      retries: 5

  api:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: ./entrypoint.sh

  web:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: "http://localhost:8000/api"
        INTERNAL_API_URL:    "http://api:8000/api"
    environment:
      NEXT_PUBLIC_API_URL: "http://api:8000/api"
    image: dashboard-web:latest
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3000:3000"
    env_file: .env

volumes:
  db_data:
